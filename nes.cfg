MEMORY {
  # use first $10 zeropage locations as locals
  HEADER:   start = $0000, size = $0010, type = ro, file = %O, fill=yes, fillval=$00;
  ZP:       start = $0010, size = $00f0, type = rw;
  RAM:      start = $0300, size = $0500, type = rw;
  PRG_ROM:  start = $8000, size = $8000, type = ro, file = %O, fill=yes, fillval=$FF;
  CHR_ROM:  start = $0000, size = $2000, type = ro, file = %O, fill=yes, fillval=$FF;
}

SEGMENTS {
  INESHDR:  load = HEADER, type = ro, align = $10;
  ZEROPAGE: load = ZP, type = zp;
  BSS:      load = RAM, type = bss, define = yes, align = $100;
  DMC:      load = PRG_ROM, type = ro, align = 64, optional = yes;
  CODE:     load = PRG_ROM, type = ro, align = $100;
  RODATA:   load = PRG_ROM, type = ro, align = $100;
  VECTORS:  load = PRG_ROM, type = ro, start = $FFFA;
  CHR:      load = CHR_ROM, type = ro, align = 16, optional = yes;
}

FILES {
  %O: format = bin;
}
